@page "/dashboard"
@inject IDashBoardService DashBoardService
@inject MessageService MessageService 

<GridContent>
    <Row Type="flex" Gutter="24">
        <AntDesign.Col Span="24" Style="margin-bottom: 24px;">
            <Title Level="4">30天内租借数据</Title>
            <AntDesign.Charts.Column @ref="_monthChart" Config="_visitChartConfig"/>
        </AntDesign.Col>
    </Row>
    <Row>
        <AntDesign.Col Xl="16" Lg="12" Md="12" Sm="24" Xs="24">
            <Title Level="4">1年内每月租借统计</Title>
            <AntDesign.Charts.Column @ref="_yearChart" Config="_saleChartConfig"/>
        </AntDesign.Col>
        <AntDesign.Col Xl="8" Lg="12" Md="12" Sm="24" Xs="24">
            <div class="salesRank">
                <h1 class="rankingTitle">
                    一年内统计数据
                </h1>
                <ul class="rankingList">
                    @foreach (var item in _ranks)
                    {
                        <li key="@item.Title">
                            <span class="rankingItemNumber @(item.Rank <= 3 ? "active" : "")">
                                @item.Rank
                            </span>
                            <span class="rankingItemTitle" title="@item.Title">
                                @item.Title
                            </span>
                            <span class="rankingItemValue">
                                @item.Total
                            </span>
                        </li>
                    }
                </ul>
            </div>
        </AntDesign.Col>
    </Row>
</GridContent>

@code {

    private IChartComponent _yearChart;
    private IChartComponent _monthChart;

    private readonly ColumnConfig _visitChartConfig = new()
    {
        ForceFit = true,
        Padding = "auto",
        XField = "x",
        YField = "y"
    };

    private readonly ColumnConfig _saleChartConfig = new()
    {
        ForceFit = true,
        Padding = "auto",
        XField = "x",
        YField = "y"
    };

    private List<RecordRank> _ranks = new()
    {
        new RecordRank {Rank = 1, Title = "Gongzhuan No.0 shop", Total = "323,234"},
        new RecordRank {Rank = 2, Title = "Gongzhuan No.1 shop", Total = "323,234"},
        new RecordRank {Rank = 3, Title = "Gongzhuan No.2 shop", Total = "323,234"},
        new RecordRank {Rank = 4, Title = "Gongzhuan No.3 shop", Total = "323,234"},
        new RecordRank {Rank = 5, Title = "Gongzhuan No.4 shop", Total = "323,234"},
        new RecordRank {Rank = 6, Title = "Gongzhuan No.5 shop", Total = "323,234"},
        new RecordRank {Rank = 7, Title = "Gongzhuan No.6 shop", Total = "323,234"}
    };

    protected override async Task OnInitializedAsync()
    {
        var response = await DashBoardService.SelectLastYearData();
        if (response.Success)
        {
            await _yearChart.ChangeData(response.Data);
            _ranks = response.Data.OrderByDescending(item => item.Y).Select(item => new RecordRank {Title = item.X, Total = item.Y.ToString()}).ToList();
            for (var i = 0; i < _ranks.Count; i++)
            {
                _ranks[i].Rank = i + 1;
            }
        }
        else
        {
            await MessageService.Error(response.Message);
        }
        var resp = await DashBoardService.SelectLast30DaysData();
        if (resp.Success)
        {
            await _monthChart.ChangeData(resp.Data);
        }
        else
        {
            await MessageService.Error(resp.Message);
        }
        await base.OnInitializedAsync();
    }

}