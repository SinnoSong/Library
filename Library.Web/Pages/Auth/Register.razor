@page "/user/register"
@layout UserLayout
@inject IAuthenticationService authService
@inject NavigationManager navManager

<PageTitle>Register</PageTitle>

<div class="main__b__1">
    <div class="register">
        <h3>注册</h3>
        @if (!string.IsNullOrEmpty(message))
        {
            <div class="alert alert-danger">
                <p>@message</p>
            </div>
        }
        <Form Model="user">
            <FormItem>
                <Input Placeholder="请输入用户名" @bind-Value="@context.UserName" Size="@InputSize.Large"></Input>
            </FormItem>

            <FormItem>
                <Input Placeholder="请输入密码" @bind-Value="@context.Password" Size="@InputSize.Large" Type="password"></Input>
            </FormItem>

            <FormItem>
                <Input Placeholder="再次输入密码" @bind-Value="@context.ConfirmPassword" Size="@InputSize.Large" Type="password"></Input>
            </FormItem>

            <FormItem>
                <Input Placeholder="请输入邮箱" @bind-Value="@context.Email" Size="@InputSize.Large" Type="email"></Input>
            </FormItem>

            <FormItem>
                <Button Type="submit" Size="large" Class="submit" OnClick="HandleRegistration">注册</Button>
                <a class="login" href="/user/login">Log in with an existing account</a>
            </FormItem>
        </Form>
    </div>
</div>


@code {
    private string? message;
    private readonly RegisterUser user = new();

    private async Task HandleRegistration()
    {
        var response = await authService.RegisterAsync(user);

        if (response.Success)
        {
            navManager.NavigateTo("/login");
        }
        message = response.Message;
    }
}