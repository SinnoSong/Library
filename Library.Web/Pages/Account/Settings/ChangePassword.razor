@page "/account/settings/ChangePassword"
@using Blazored.LocalStorage
@inject NavigationManager NavigationManager
@inject IUserService UserService
@inject MessageService MessageService
@inject ILocalStorageService LocalStorageService

<PageContainer Title="修改密码">
    <Breadcrumb>
        <Breadcrumb>
            <BreadcrumbItem>Home</BreadcrumbItem>
            <BreadcrumbItem>Account</BreadcrumbItem>
            <BreadcrumbItem>UpdateUserGrade</BreadcrumbItem>
        </Breadcrumb>
    </Breadcrumb>

    <ChildContent>
        <Card>
            <Form Model="@_userPasswordChangeDto" OnFinish="HandleUpdate">
                <FormItem Label="原密码">
                    <InputPassword @bind-Value="@context.OldPassword" Placeholder="请输入原密码"/>
                </FormItem>
                <FormItem Label="新密码">
                    <InputPassword @bind-Value="@context.NewPassword" Placeholder="必须包含大小写数字特殊字符"/>
                </FormItem>
                <FormItem Label="再次输入新密码">
                    <InputPassword @bind-Value="@context.ConfirmPassword" Placeholder="必须包含大小写数字特殊字符"/>
                </FormItem>
                <FormItem>
                    <Button Type="@ButtonType.Primary" HtmlType="submit">修改密码</Button>
                </FormItem>
            </Form>
            <Button OnClick="@(() => NavigationManager.NavigateTo("/account/settings"))">返回</Button>
        </Card>
    </ChildContent>
</PageContainer>


@code {
    private readonly UserPasswordChangeDto _userPasswordChangeDto = new();

    private async Task HandleUpdate()
    {
        var userId = Guid.Parse(await LocalStorageService.GetItemAsStringAsync("userId"));
        var response = await UserService.ChangePassword(userId, _userPasswordChangeDto);
        if (response.Success)
        {
            NavigationManager.NavigateTo("/user/login");
            await LocalStorageService.ClearAsync();
            await MessageService.Info("修改成功！请重新登录");
        }
        else
        {
            await MessageService.Error(response.Message);
        }
    }

}